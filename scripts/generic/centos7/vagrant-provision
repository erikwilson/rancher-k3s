#!/bin/bash
set -ve

cd $(dirname $0)/../../..

if [ ! -f /etc/vagrant_box_build_time ]; then
    echo "This script should only be called during vagrant provisioning"
    exit 1
fi

ARCH=amd64
if [[ $HOME == /go/* ]]; then
    echo "Must not launch vagrant from /go/"
    exit 1
fi 

if [ -z "${GOPATH}" ]; then
    GOPATH=$(realpath $HOME/../../../..)
    echo "WARNING: Assuming GOPATH=$GOPATH"
else
    echo "Using parent GOPATH=$GOPATH"
fi
goversion=$(grep "^FROM " Dockerfile.dapper | sed -e 's/^FROM golang:\(.*\)-.*/\1/')

if [ -z "$goversion" ]; then
    echo "Cannot find version of go to fetch"
    exit 1
fi

echo "Installing go $goversion"
curl -sL https://storage.googleapis.com/golang/go${goversion}.linux-${ARCH}.tar.gz | tar -xzf - -C /usr/local
# ---
cat <<EOF >/etc/profile.d/build.sh
export GO111MODULE=off
export GOPATH=$GOPATH
export PATH=/usr/local/bin:$PATH:/usr/local/go/bin:$GOPATH/bin
EOF
. /etc/profile.d/build.sh
# ---
sed -i 's|:/bin/ash$|:/bin/bash|g' /etc/passwd
cat <<\EOF >/etc/profile.d/color.sh
alias ls='ls --color=auto'
export PS1='\033[31m[ \033[90m\D{%F %T}\033[31m ]\n\[\033[36m\]\u\[\033[m\]🐮\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]$ '
EOF
# ---
yum install -y \
    bash git gcc musl-dev vim less file wget jq tar zip squashfs-tools npm coreutils \
    libffi-dev libseccomp-devel make \
    pkg-config libselinux-devel \
    container-selinux policycoreutils policycoreutils-python
# ---
yum install -y gdb
go get -u github.com/go-delve/delve/cmd/dlv
# ---
# docker install instructions slightly changed from https://kubernetes.io/docs/setup/production-environment/container-runtimes/
# default "exec-opts": ["native.cgroupdriver=cgroupfs"], and set "selinux-enabled": true
yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo   https://download.docker.com/linux/centos/docker-ce.repo
yum update -y && yum install -y   containerd.io-1.2.10   docker-ce-19.03.4   docker-ce-cli-19.03.4
mkdir -p /etc/docker
cat > /etc/docker/daemon.json <<EOF
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "selinux-enabled": true,
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF
# ---
systemctl daemon-reload
systemctl disable --now firewalld
# disable docker for now as the default containerd path interferes
systemctl disable --now docker
# ---
# set selinux to permissive for dev & testing purposes only
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
# ---
cat <<\EOF >>/etc/motd
               ,        ,
   ,-----------|'------'| |\    ____
  /.           '-'@  o|-' | |  /___ \
 |/|             | .. |   | | __ __) | ____
   |   .________.'----'   | |/ /|__ < / __/
   |  ||        |  ||     |   < ___) |\__ \
   \__|'        \__|'     |_|\_\_____/____/

EOF
# ---
set +v
